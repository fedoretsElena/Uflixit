{"version":3,"sources":["core/HttpInterceptor.tsx","components/shared/Title/index.ts","components/shared/Title/Title.tsx","components/shared/Loader/index.ts","components/shared/Loader/Loader.tsx","components/shared/ErrorMsg/index.ts","components/shared/ErrorMsg/ErrorMsg.tsx","components/shared/MediaList/MediaItem/index.ts","components/shared/MediaList/MediaItem/MediaItem.tsx","components/shared/MediaList/index.ts","components/shared/MediaList/MediaList.tsx","core/ApiConfig.tsx","models/MediaFactory.tsx","models/BaseMedia.tsx","models/Media.tsx","models/Movie.tsx","models/TVShow.tsx","services/mediaService.tsx","components/PopularShows/PopularShows.tsx","components/WantedMovies/WantedMovies.tsx","components/Home/index.ts","components/Home/Home.tsx","components/shared/Input/index.ts","components/shared/Input/Input.tsx","components/Header/SearchForm/index.ts","components/Header/SearchForm/SearchForm.tsx","components/Header/index.ts","components/Header/Header.tsx","components/Footer/index.ts","components/Footer/Footer.tsx","components/Login/Login.tsx","components/MediaDetail/index.ts","components/MediaDetail/MediaDetail.tsx","components/SearchResults/index.ts","components/SearchResults/SearchResults.tsx","services/authService.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","defaults","headers","common","process","get","interceptors","response","use","config","data","result","error","Promise","reject","Title","props","react_default","a","createElement","className","title","length","Loader","ErrorMsg","role","msg","MediaItem","_this$props$item","this","item","id","image","type","Fragment","react_router_dom","to","concat","src","alt","Component","MediaList","items","map","MediaList_MediaItem","key","ApiConfig","API","getPopularTVShowsPath","getWantedMoviesPath","getMediaDetailsPath","getMediaPosterPath","getMediaSearchPath","MediaType","BaseMedia","Object","classCallCheck","imdb_id","Media","_this","possibleConstructorReturn","getPrototypeOf","call","rating","duration","published","stars","countries","keywords","genres","trailer","summary","year","slice","Movie","director","TVShow","creators","yearStarted","yearEnded","status","year_started","year_ended","MediaFactory","_media","MediaService","createClass","value","then","ids","convertToObj","res","getPosters","_this2","location","pathname","indexOf","prepareApiPath","getMedia","_this3","requests","all","spread","movies","tvShows","prepareSearchRes","toConsumableArray","media","_this4","getPoster","forEach","index","i","catch","path","replace","Array","isArray","Another","PopularShows","mediaService","state","shows","loaded","loading","_this$state","shared_Title","shared_Loader","shared_MediaList","shared_ErrorMsg","getPopularShows","setState","WantedMovies","getWantedMovies","getWantedMoviesIds","Home","components_PopularShows_PopularShows","components_WantedMovies_WantedMovies","Input","_inputRef","handleChange","e","searchChanged","target","_this$props","placeholder","active","ref","input","onBlur","lostFocus","onChange","focus","SearchForm","search","redirectToReferrer","openSearchField","closeSearchField","navigateToSearchPage","preventDefault","handleSearchChange","val","onSubmit","index_esm","onClick","shared_Input","react_router","Header","Header_SearchForm","Footer","Login","responseGoogle","console","log","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","MediaDetail","_this$state$media","genre","word","creator","star","getDetail","match","params","SearchResults","stopListenRoute","cancelSearchRequest","startListenRouteChanges","newLocation","URLSearchParams","cancelToken","CancelToken","c","history","listen","AuthService","user","App","components_Header","exact","component","components_Footer","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6be1219f.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\n\r\naxios.defaults.headers.common['X-RapidAPI-Key'] = process.env.REACT_APP_KEY;\r\naxios.defaults.headers.common['X-RapidAPI-Host'] = process.env.REACT_APP_HOST;\r\n\r\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\r\n\r\naxios.interceptors.response.use(function (config: AxiosResponse) {\r\n    return config.data.result;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n","import Title from './Title';\r\n\r\nexport default Title;","import React from 'react';\r\n\r\ninterface IProps {\r\n    title: string;\r\n    length: number;\r\n}\r\n\r\nconst Title = (props : IProps) => {\r\n  return (\r\n      <h4 className=\"mt-5 mb-3\">\r\n          {props.title}\r\n          <span className=\"ml-2 badge badge-primary\">{ props.length }</span>\r\n      </h4>\r\n  );\r\n};\r\n\r\nexport default Title;","import Loader from './Loader';\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => (\r\n    <div className=\"whirlpool\">\r\n        <div className=\"ring ring1\"></div>\r\n        <div className=\"ring ring2\"></div>\r\n        <div className=\"ring ring3\"></div>\r\n        <div className=\"ring ring4\"></div>\r\n        <div className=\"ring ring5\"></div>\r\n        <div className=\"ring ring6\"></div>\r\n        <div className=\"ring ring7\"></div>\r\n        <div className=\"ring ring8\"></div>\r\n        <div className=\"ring ring9\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import ErrorMsg from './ErrorMsg';\r\n\r\nexport default ErrorMsg;","import React from 'react';\r\n\r\ninterface IProps {\r\n    msg: string | null;\r\n}\r\n\r\nconst ErrorMsg = (props: IProps) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n        { props.msg }\r\n    </div>\r\n);\r\n\r\nexport default ErrorMsg;","import MediaItem from './MediaItem';\r\n\r\nexport default MediaItem;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MediaItem.scss';\r\nimport BaseMedia from '../../../../models/BaseMedia';\r\n\r\ninterface IProps {\r\n    item: BaseMedia;\r\n}\r\n\r\nclass MediaItem extends Component<IProps> {\r\n\r\n    render() {\r\n        const {id, image, title, type} = this.props.item;\r\n\r\n        return (\r\n            <>\r\n                <Link className=\"card mr-3 mb-3 border-0 rounded\"\r\n                      to={`/${type}s/${id}`}\r\n                >\r\n                    <div className=\"card__img-wrapper overflow-hidden\">\r\n                        <img src={image}\r\n                             className=\"card__img card-img-top\"\r\n                             alt=\"poster\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title text-dark text-center\">{title}</h6>\r\n                    </div>\r\n                </Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaItem;","import MediaList from './MediaList';\r\n\r\nexport default MediaList;","import React, { Component } from 'react';\r\n\r\nimport MediaItem from './MediaItem';\r\n\r\ninterface IProps {\r\n    items: any[]\r\n}\r\n\r\nclass MediaList extends Component<IProps> {\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div className=\"card-group\">\r\n                { items.map((item) => (\r\n                    <MediaItem key={item.id}\r\n                               item={item}  />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaList;","class ApiConfig {\r\n\r\n    static API = `https://${process.env.REACT_APP_HOST}/`;\r\n\r\n    static getPopularTVShowsPath = `${ApiConfig.API}tv-shows/popular`;\r\n    static getWantedMoviesPath = `${ApiConfig.API}movies/wanted`;\r\n\r\n    static getMediaDetailsPath = `${ApiConfig.API}{type}/details/{id}`;\r\n    static getMediaPosterPath = `${ApiConfig.API}{type}/poster/{id}`;\r\n    static getMediaSearchPath = `${ApiConfig.API}{type}/search`;\r\n\r\n};\r\n\r\nexport default ApiConfig;","import Movie from './Movie';\r\nimport TVShow from './TVShow';\r\n\r\nexport enum MediaType {\r\n    Movie = 'movie',\r\n    TVShow = 'tv-show',\r\n    Another = 'another'\r\n}\r\n\r\nclass MediaFactory {\r\n    private readonly _media: Movie | TVShow;\r\n\r\n    constructor(type: MediaType, data: any) {\r\n        this._media = type === MediaType.Movie ? new Movie(data) : new TVShow(data);\r\n    }\r\n\r\n    getMedia(): Movie | TVShow {\r\n        return this._media;\r\n    }\r\n}\r\n\r\nexport default MediaFactory;","import { MediaType } from './MediaFactory';\r\n\r\nexport interface IBaseMedia {\r\n    id: string;\r\n    type?: MediaType;\r\n    image?: string;\r\n    title?: string;\r\n    imdb_id?: string;\r\n}\r\n\r\nclass BaseMedia {\r\n    id: string;\r\n    title: string;\r\n    image: string;\r\n    type: MediaType;\r\n\r\n    constructor(data: IBaseMedia, type: MediaType) {\r\n        this.id = data.imdb_id || data.id;\r\n        this.image = data.image || 'https://cdns.directv.com/cms2/my_directv/general/lg__celebrity_generic.jpg';\r\n        this.title = data.title || '';\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BaseMedia;","import BaseMedia from './BaseMedia';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface IMedia {\r\n}\r\n\r\nclass Media extends BaseMedia{\r\n    rating: number;\r\n    duration: number;\r\n    published: string;\r\n    stars: string[];\r\n    countries: string[];\r\n    keywords: string[];\r\n    genres: string[];\r\n    trailer: string;\r\n    summary: string;\r\n    year: number;\r\n\r\n    constructor(data: any, type: MediaType) {\r\n        super(data, type);\r\n\r\n        this.rating = data.rating;\r\n        this.duration = data.duration;\r\n        this.published = data.published;\r\n        this.stars = data.stars.slice(0, 5);\r\n        this.countries = data.countries;\r\n        this.keywords = data.keywords.slice(0, 10);\r\n        this.genres = data.genres;\r\n        this.trailer = data.trailer;\r\n        this.summary = data.summary;\r\n        this.year = data.year;\r\n    }\r\n}\r\n\r\nexport default Media;","import Media from './Media';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface IMovie {\r\n}\r\n\r\nclass Movie  extends Media {\r\n    director: string;\r\n\r\n    constructor(data: any) {\r\n        super(data, MediaType.Movie);\r\n\r\n        this.director = data.director;\r\n    }\r\n}\r\n\r\nexport default Movie;","import Media from './Media';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface ITVShow {\r\n}\r\n\r\nclass TVShow extends Media {\r\n    creators: string[];\r\n    yearStarted: string;\r\n    yearEnded: string;\r\n    status: string;\r\n\r\n    constructor(data: any) {\r\n        super(data, MediaType.TVShow);\r\n\r\n        this.creators = data.creators;\r\n        this.yearStarted = data.year_started || 'unknown';\r\n        this.yearEnded = data.year_ended || 'not yet';\r\n        this.status = data.status;\r\n    }\r\n}\r\n\r\nexport default TVShow;","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport ApiConfig from '../core/ApiConfig';\r\nimport Movie from '../models/Movie';\r\nimport TVShow from '../models/TVShow';\r\nimport BaseMedia, { IBaseMedia } from '../models/BaseMedia';\r\nimport MediaFactory, { MediaType } from '../models/MediaFactory';\r\n\r\nexport class MediaService {\r\n\r\n    getPopularShows(): Promise<BaseMedia[]> {\r\n\r\n        return axios.get(ApiConfig.getPopularTVShowsPath)\r\n            .then((ids: any) => this.convertToObj(ids))\r\n            .then((res: any) => this.getPosters(res.slice(0, 10), MediaType.TVShow));\r\n    }\r\n\r\n    getWantedMoviesIds(): Promise<BaseMedia[]> {\r\n\r\n        return axios.get(ApiConfig.getWantedMoviesPath)\r\n            .then((ids: any) => this.convertToObj(ids))\r\n            .then((res: any) => this.getPosters(res, MediaType.Movie));\r\n    }\r\n\r\n    getDetail(id: string, location: { pathname: string }): Promise<Movie | TVShow> {\r\n        const type = location.pathname.indexOf('movie') !== -1 ? MediaType.Movie : MediaType.TVShow;\r\n\r\n        return axios.get(this.prepareApiPath(ApiConfig.getMediaDetailsPath, id, type))\r\n            .then(data => {\r\n                return new MediaFactory(type, data).getMedia();\r\n            });\r\n    }\r\n\r\n    search(config: AxiosRequestConfig): Promise<any> {\r\n        const requests = [axios.get(this.prepareApiPath(ApiConfig.getMediaSearchPath, '', MediaType.Movie + 's'), config),\r\n                          axios.get(this.prepareApiPath(ApiConfig.getMediaSearchPath, '', MediaType.TVShow + 's'), config)];\r\n\r\n        return axios.all(requests)\r\n            .then(axios.spread((movies: IBaseMedia, tvShows: any) => {\r\n                // Both requests are now complete\r\n                return axios.all([this.getPosters(this.prepareSearchRes(movies), MediaType.Movie),\r\n                    this.getPosters(this.prepareSearchRes(tvShows), MediaType.TVShow)])\r\n                    .then(res => [...res[0], ...res[1]]);\r\n            }));\r\n    }\r\n\r\n    private getPosters(media: IBaseMedia[], type: MediaType): Promise<BaseMedia[]> {\r\n\r\n        return axios.all(media.map(item => this.getPoster(item, type)))\r\n            .then((res: string[]) => {\r\n\r\n                res.forEach((item, index) => {\r\n                    media[index].image = item;\r\n                });\r\n\r\n                return media.map(i => new BaseMedia(i, type));\r\n            });\r\n    }\r\n\r\n    private getPoster(media: IBaseMedia, type: MediaType): Promise<any> {\r\n        return axios.get(this.prepareApiPath(ApiConfig.getMediaPosterPath, media.id, type))\r\n            .catch(() => media.image);\r\n    }\r\n\r\n    private prepareApiPath(path: string, id: string, type: MediaType | string): string {\r\n        return path.replace('{id}', id)\r\n            .replace('{type}', type);\r\n    }\r\n\r\n    private convertToObj(ids: string[]): IBaseMedia[] {\r\n        return ids.map((id: string) => {\r\n            return {id};\r\n        });\r\n    }\r\n\r\n    private prepareSearchRes(media: IBaseMedia | IBaseMedia[]): BaseMedia[] {\r\n        let result: IBaseMedia[] = Array.isArray(media) ? media : [media];\r\n\r\n        return result.map((item: IBaseMedia) => new BaseMedia(item, MediaType.Another));\r\n    }\r\n}\r\n\r\nexport default MediaService;","import React, { Component } from 'react';\r\n\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport MediaList from '../shared/MediaList';\r\nimport MediaService from '../../services/mediaService';\r\nimport BaseMedia from '../../models/BaseMedia';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n    shows: BaseMedia[],\r\n    loaded: boolean,\r\n    loading: boolean,\r\n    error: null | string\r\n}\r\n\r\nclass PopularShows extends Component<IProps, IState> {\r\n    mediaService: MediaService;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shows: [],\r\n            error: null,\r\n            loaded: false,\r\n            loading: false\r\n        };\r\n\r\n        this.mediaService = new MediaService();\r\n    }\r\n\r\n    render() {\r\n        const {shows, error} = this.state;\r\n        return (\r\n            <>\r\n                <Title title='Popular shows'\r\n                       length={shows.length}/>\r\n                {this.state.loading && <Loader/>}\r\n                {this.state.loaded && <MediaList items={shows} />}\r\n                {this.state.error && <ErrorMsg msg={error}/>}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getPopularShows();\r\n    }\r\n\r\n    private getPopularShows(): void {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        this.mediaService.getPopularShows()\r\n            .then((shows: BaseMedia[]) => {\r\n\r\n                this.setState({\r\n                    shows,\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(() => this.setState({\r\n                    loading: false,\r\n                    error: 'Can not get posters of TV shows using ids.'\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\nexport default PopularShows;","import React, { Component } from 'react';\r\n\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport MediaList from '../shared/MediaList';\r\nimport MediaService from '../../services/mediaService';\r\nimport BaseMedia from '../../models/BaseMedia';\r\n\r\ninterface IState {\r\n    movies: BaseMedia[],\r\n    loaded: boolean,\r\n    loading: boolean\r\n    error: string | null,\r\n}\r\n\r\nclass WantedMovies extends Component {\r\n    state: IState = {\r\n        movies: [],\r\n        error: null,\r\n        loaded: false,\r\n        loading: false\r\n    };\r\n    mediaService: MediaService = new MediaService();\r\n\r\n    render() {\r\n        const {loaded, loading, error, movies} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Title title='Wanted movies'\r\n                       length={movies.length}/>\r\n                {loading && (<Loader/>)}\r\n                {loaded && movies && (<MediaList items={movies} />)}\r\n                {error && !loading && (<ErrorMsg msg={error}/>)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n\r\n        this.getWantedMovies();\r\n    }\r\n\r\n    private getWantedMovies(): void {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        this.mediaService.getWantedMoviesIds()\r\n            .then((movies: BaseMedia[]) => {\r\n                this.setState({\r\n                    movies,\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(() => this.setState({\r\n                    loading: false,\r\n                    error: 'Can not get posters of movies using ids.'\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\nexport default WantedMovies;\r\n","import Home from './Home';\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nimport PopularShows from '../PopularShows/PopularShows';\r\nimport WantedMovies from '../WantedMovies/WantedMovies';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PopularShows />\r\n                <WantedMovies />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import Input from './Input';\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nimport './Input.scss';\r\n\r\ninterface IProps {\r\n    value: string,\r\n    lostFocus: any,\r\n    searchChanged: any,\r\n    active: boolean,\r\n    placeholder: string\r\n}\r\n\r\nclass Input extends Component<IProps> {\r\n    _inputRef: any;\r\n\r\n    render() {\r\n        const { placeholder, active } = this.props;\r\n\r\n        return (\r\n            <div className={'input ' + (active ? 'input--active' : '')}\r\n            >\r\n                <input type=\"text\"\r\n                       className='input__el w-100'\r\n                       value={this.props.value}\r\n                       ref={input => this._inputRef = input}\r\n                       placeholder={placeholder}\r\n                       onBlur={this.props.lostFocus}\r\n                       onChange={this.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this._inputRef.focus();\r\n    }\r\n\r\n    handleChange = (e: any) => {\r\n        // const { value } = this._input;\r\n\r\n        this.props.searchChanged(e.target.value);\r\n    }\r\n}\r\n\r\nexport default Input;","import SearchForm from './SearchForm';\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { IoIosSearch } from 'react-icons/io';\r\n\r\nimport './SearchForm.scss';\r\nimport Input from '../../shared/Input';\r\n\r\nclass SearchForm extends Component {\r\n    state = {\r\n        search: '',\r\n        active: false,\r\n        redirectToReferrer: false\r\n    };\r\n\r\n    render() {\r\n        const {active, redirectToReferrer, search} = this.state;\r\n\r\n        return (\r\n            <form className=\"search-form d-flex align-items-center\"\r\n                  onSubmit={ this.navigateToSearchPage }\r\n            >\r\n                <IoIosSearch className={ !active ? 'search-form__icon' : 'search-form__icon search-form__icon--hidden' }\r\n                             onClick={ this.openSearchField }/>\r\n\r\n                <Input placeholder='Search... '\r\n                       value={ this.state.search }\r\n                       active={ this.state.active }\r\n                       lostFocus={ this.closeSearchField }\r\n                       searchChanged={ this.handleSearchChange }\r\n                />\r\n\r\n                {redirectToReferrer && <Redirect to={{ pathname: '../search', search: `?query=${search}` }} />}\r\n\r\n            </form>\r\n        );\r\n    };\r\n\r\n    componentDidUpdate(): void {\r\n\r\n        if (this.state.redirectToReferrer) {\r\n\r\n            this.setState({\r\n                redirectToReferrer: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openSearchField = () => {\r\n\r\n        this.setState({\r\n            active: true\r\n        });\r\n    };\r\n\r\n    closeSearchField = () => {\r\n\r\n        this.setState({\r\n            search: '',\r\n            active: false\r\n        });\r\n    };\r\n\r\n    navigateToSearchPage = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            redirectToReferrer: true\r\n        });\r\n    };\r\n\r\n    handleSearchChange = (val: string) => {\r\n        this.setState({search: val});\r\n    };\r\n}\r\n\r\nexport default SearchForm;","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.scss';\r\nimport SearchForm from './SearchForm';\r\n\r\nconst Header = () => (\r\n    <header className=\"header bg-dark py-1\">\r\n        <div className=\"container d-flex justify-content-between align-items-center\">\r\n            <Link className=\"header__logo\"\r\n                  to='/'\r\n            >\r\n                <img className=\"img-fluid\"\r\n                     src=\"https://www.userlogos.org/files/netflix-n-logo-png.png\"\r\n                     alt=\"logo\"\r\n                />\r\n            </Link>\r\n\r\n            <SearchForm/>\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import { Footer } from './Footer';\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer bg-dark py-4 position-absolute text-white w-100\">\r\n            <div className=\"container d-flex justify-content-center\">\r\n                {/*<ContactForm/>*/}\r\n                Still need to do:\r\n\r\n                <ul className=\"mb-0\">\r\n                    <li>Authorization</li>\r\n                    <li>Search</li>\r\n                    <li>Episodes</li>\r\n                    <li>Add slider?</li>\r\n                    <li>Lazy images?</li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <GoogleLogin\r\n                clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        );\r\n    }\r\n\r\n    responseGoogle = (res: any) => {\r\n        console.log('Answer', res);\r\n    }\r\n}\r\n\r\nexport default Login;","import MediaDetail from './MediaDetail';\r\n\r\nexport default MediaDetail;","import React, { Component } from 'react';\r\n\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\n\r\nimport Movie from '../../models/Movie';\r\nimport TVShow from '../../models/TVShow';\r\nimport MediaService from '../../services/mediaService';\r\n\r\ninterface IState {\r\n    media: TVShow | Movie | any,\r\n    loaded: boolean,\r\n    loading: boolean,\r\n    error: string | null\r\n}\r\n\r\nclass MediaDetail extends Component<any> {\r\n    state: IState = {\r\n        media: {},\r\n        error: null,\r\n        loaded: false,\r\n        loading: false\r\n    };\r\n\r\n    mediaService = new MediaService();\r\n\r\n    render() {\r\n        const {year, creators, stars, keywords, yearStarted, yearEnded, summary, rating, title, image, genres} = this.state.media;\r\n\r\n        return (\r\n            <>\r\n                {this.state.loading && !this.state.error && <Loader/>}\r\n                {this.state.loaded &&\r\n                <div className=\"row\">\r\n                    <div className=\"col col-4\">\r\n                        <img className=\"img-thumbnail mb-3\"\r\n                             src={image}\r\n                             alt=\"media-poster\"/>\r\n\r\n                        {genres.map((genre: string, i: number) =>\r\n                            <span key={i}\r\n                                  className=\"badge badge-secondary mr-2 py-1 px-2 mt-1\">{genre}</span>)}\r\n                    </div>\r\n\r\n                    <section className=\"col col-8\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h1 className=\"mb-0 w-75\">{title}</h1>\r\n                            <span className=\"badge badge-warning\">{rating}</span>\r\n                        </div>\r\n                        <div className=\"mt-1 text-primary\"> {yearStarted ?\r\n                            <span>{yearStarted} - {yearEnded}</span> : year} </div>\r\n\r\n                        <div className=\"mt-5 w-75\">\r\n                            {summary}\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mb-2\">\r\n                            {keywords.map((word: string, i: number) =>\r\n                                <span key={i}\r\n                                      className=\"badge badge-info mr-2 py-1 px-2 mt-1\">{word}</span>)}\r\n                        </div>\r\n\r\n                        <div className=\"row mt-4\">\r\n                            {creators && creators.length > 0 && <div className=\"col col-6\">\r\n                                <h5>Creators</h5>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {creators.map((creator: string, i: number) =>\r\n                                        <li key={i}\r\n                                            className=\"list-group-item\">{creator}</li>)}\r\n                                </ul>\r\n                            </div>}\r\n\r\n                            <div className=\"col col-6\">\r\n                                <h5>Stars</h5>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {stars.map((star: string, i: number) =>\r\n                                        <li key={i}\r\n                                            className=\"list-group-item\">{star}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>}\r\n\r\n                {this.state.error && <ErrorMsg msg={this.state.error}/>}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getDetail();\r\n    }\r\n\r\n    private getDetail(): void {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        this.mediaService.getDetail(this.props.match.params.id, this.props.location)\r\n            .then((data: Movie | TVShow) => {\r\n                this.setState({\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false,\r\n                    media: data\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    error: 'Can not get details by id.'\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport default MediaDetail;","import SearchResults from './SearchResults';\r\n\r\nexport default SearchResults;","import React, { Component } from 'react';\r\nimport { UnregisterCallback } from 'history';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport MediaList from '../shared/MediaList';\r\nimport BaseMedia from '../../models/BaseMedia';\r\nimport MediaService from '../../services/mediaService';\r\n\r\ninterface IProps {\r\n    location: any,\r\n    history: any\r\n}\r\n\r\ninterface IStore {\r\n    media: BaseMedia[];\r\n    loading: boolean;\r\n    loaded: boolean;\r\n    error: string | null;\r\n}\r\n\r\nclass SearchResults extends Component<IProps, IStore> {\r\n    stopListenRoute: UnregisterCallback = () => {\r\n    };\r\n    cancelSearchRequest: Function = () => {\r\n    };\r\n    mediaService: MediaService = new MediaService();\r\n    state: IStore = {\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n        media: []\r\n    };\r\n\r\n    render() {\r\n        const {media, loaded, loading, error} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Title title='Search results'\r\n                       length={media.length}\r\n                />\r\n                {loading && !error && <Loader/>}\r\n                {loaded && <MediaList items={media} />}\r\n                {error && <ErrorMsg msg={error}/>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.search();\r\n        this.startListenRouteChanges();\r\n    }\r\n\r\n    // TODO: there is warning about memory leak, BUT request is canceled and route changes aren't listening\r\n    componentWillUnmount(): void {\r\n        this.cancelSearchRequest();\r\n        this.stopListenRoute();\r\n    }\r\n\r\n    private search(newLocation?: any): void {\r\n        const location: any = newLocation || this.props.location;\r\n        const params = new URLSearchParams(location.search);\r\n\r\n        this.setState({\r\n            media: [],\r\n            loading: true\r\n        });\r\n\r\n        const config: AxiosRequestConfig = {\r\n            params,\r\n            cancelToken: new axios.CancelToken((c) => {\r\n                // An executor function receives a cancel function as a parameter\r\n                this.cancelSearchRequest = c;\r\n            })\r\n        };\r\n\r\n        this.mediaService.search(config)\r\n            .then((res: BaseMedia[]) => {\r\n\r\n                    this.setState({\r\n                        media: res,\r\n                        loaded: true,\r\n                        loading: false,\r\n                        error: null\r\n                    })\r\n                }\r\n            )\r\n            .catch(() => this.setState({\r\n                    error: 'There is no game according to the request.',\r\n                    loading: false\r\n                })\r\n            );\r\n    }\r\n\r\n    private startListenRouteChanges(): void {\r\n        this.stopListenRoute = this.props.history.listen((location: any) => this.search(location));\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import { IUser } from '../models/User';\r\n\r\nclass AuthService {\r\n    user: IUser = {};\r\n\r\n    isLogin(): boolean {\r\n        return !!this.user;\r\n    }\r\n}\r\n\r\nexport default AuthService;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport './core/HttpInterceptor';\r\n\r\nimport Home from './components/Home';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Login from './components/Login/Login';\r\nimport MediaDetail from './components/MediaDetail';\r\nimport SearchResults from './components/SearchResults';\r\nimport AuthService from './services/authService';\r\n\r\nfunction App() {\r\n    const authService = new AuthService();\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header/>\r\n\r\n                <div className=\"container py-4\">\r\n\r\n                    <Switch>\r\n                        <Route exact\r\n                               path='/'\r\n                               component={Home}/>\r\n\r\n                        <Route exact\r\n                               path='/tv-shows/:id'\r\n                               component={MediaDetail}/>\r\n\r\n                        <Route exact\r\n                               path='/movies/:id'\r\n                               component={MediaDetail}/>\r\n\r\n                        <Route path='/search'\r\n                               component={SearchResults}/>\r\n\r\n                        <Route path='/login'\r\n                               component={Login}/>\r\n                    </Switch>\r\n\r\n                </div>\r\n\r\n                <Footer/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('ErrorMsg during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}