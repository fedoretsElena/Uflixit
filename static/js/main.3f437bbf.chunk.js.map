{"version":3,"sources":["core/HttpInterceptor.tsx","components/shared/Title/index.ts","components/shared/Title/Title.tsx","components/shared/Loader/index.ts","components/shared/Loader/Loader.tsx","components/shared/ErrorMsg/index.ts","components/shared/ErrorMsg/ErrorMsg.tsx","components/shared/MediaList/MediaNav/MediaNav.tsx","components/shared/MediaList/MediaNav/index.ts","components/shared/MediaList/MediaItem/index.ts","components/shared/MediaList/MediaItem/MediaItem.tsx","components/shared/MediaList/index.ts","components/shared/MediaList/MediaList.tsx","core/ApiConfig.tsx","models/MediaFactory.tsx","models/BaseMedia.tsx","models/Media.tsx","models/Movie.tsx","models/TVShow.tsx","services/mediaService.tsx","components/PopularShows/PopularShows.tsx","components/WantedMovies/WantedMovies.tsx","components/Home/index.ts","components/Home/Home.tsx","components/shared/Input/index.ts","components/shared/Input/Input.tsx","components/Header/SearchForm/index.ts","components/Header/SearchForm/SearchForm.tsx","components/Header/index.ts","components/Header/Header.tsx","components/Footer/index.ts","components/Footer/Footer.tsx","components/Login/Login.tsx","components/MediaDetail/index.ts","components/MediaDetail/MediaDetail.tsx","components/SearchResults/index.ts","components/SearchResults/SearchResults.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","defaults","headers","common","X-RapidAPI-Key","process","X-RapidAPI-Host","Access-Control-Allow-Origin","interceptors","response","use","config","data","result","error","Promise","reject","Title","_this$props","this","props","title","length","react_default","a","createElement","className","nextProps","nextState","nextContext","_this$props2","Component","Loader","ErrorMsg","role","msg","MediaNav","_ref","curr","uploadPage","type","key","onClick","index_esm","arr","i","push","generateArr","map","step","concat","console","log","MediaItem","_this$props$item","item","id","image","react_router_dom","to","src","alt","MediaList","items","pages","uploadMediaForStep","TransitionGroup","CSSTransition","classNames","in","appear","timeout","MediaList_MediaItem","MediaList_MediaNav","ApiConfig","API","getPopularTVShowsPath","getWantedMoviesPath","getMediaDetailsPath","getMediaPosterPath","getMediaSearchPath","MediaType","BaseMedia","Object","classCallCheck","imdb_id","Media","_this","possibleConstructorReturn","getPrototypeOf","call","rating","duration","published","stars","countries","keywords","genres","trailer","summary","year","slice","Movie","director","TVShow","creators","yearStarted","yearEnded","status","year_started","year_ended","MediaFactory","_media","MediaService","VISIBLE_ITEMS","storage","popularShows","createClass","value","page","arguments","undefined","getPosters","ids","extractDataFromStorage","then","media","get","convertToArrWithKeyId","_this2","res","location","pathname","indexOf","prepareApiPath","getMedia","_this3","requests","all","spread","movies","tvShows","prepareSearchRes","toConsumableArray","_this4","getPoster","forEach","index","catch","path","replace","Array","isArray","Another","mediaFromStorage","requestedMedia","apply","PopularShows","mediaService","getPopularShows","setState","loading","nav","loaded","state","_this$state","Fragment","shared_Title","shared_Loader","shared_MediaList","shared_ErrorMsg","WantedMovies","getWantedMovies","getWantedMoviesIds","Home","components_PopularShows_PopularShows","components_WantedMovies_WantedMovies","Input","_inputRef","handleChange","e","searchChanged","target","placeholder","active","ref","input","onBlur","lostFocus","onChange","focus","SearchForm","search","redirectToReferrer","openSearchField","closeSearchField","navigateToSearchPage","preventDefault","handleSearchChange","val","onSubmit","io_index_esm","shared_Input","react_router","Header","Header_SearchForm","Footer","Login","responseGoogle","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","MediaDetail","_this$state$media","genre","word","creator","star","getDetail","match","params","SearchResults","stopListenRoute","cancelSearchRequest","startListenRouteChanges","newLocation","URLSearchParams","cancelToken","CancelToken","c","history","listen","App","components_Header","exact","component","render","components_Footer","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f437bbf.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\n\r\naxios.defaults.headers.common = {\r\n    'X-RapidAPI-Key': process.env.REACT_APP_KEY,\r\n    'X-RapidAPI-Host': process.env.REACT_APP_HOST,\r\n    'Access-Control-Allow-Origin': '*'\r\n};\r\n\r\naxios.interceptors.response.use(function (config: AxiosResponse) {\r\n    return config.data.result;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n","import Title from './Title';\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n    title: string;\r\n    length: number;\r\n}\r\n\r\nclass Title extends Component<IProps> {\r\n\r\n    render() {\r\n        const {title, length} = this.props;\r\n\r\n        return (\r\n            <h4 className=\"mt-5 mb-3\">\r\n                {title}\r\n                <span className=\"ml-2 badge badge-primary\">{ length }</span>\r\n            </h4>\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<{}>, nextContext: any): boolean {\r\n        const {title, length} = this.props;\r\n\r\n        if (title !== nextProps.title || length !== nextProps.length) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Title;","import Loader from './Loader';\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => (\r\n    <div className=\"whirlpool\">\r\n        <div className=\"ring ring1\"></div>\r\n        <div className=\"ring ring2\"></div>\r\n        <div className=\"ring ring3\"></div>\r\n        <div className=\"ring ring4\"></div>\r\n        <div className=\"ring ring5\"></div>\r\n        <div className=\"ring ring6\"></div>\r\n        <div className=\"ring ring7\"></div>\r\n        <div className=\"ring ring8\"></div>\r\n        <div className=\"ring ring9\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import ErrorMsg from './ErrorMsg';\r\n\r\nexport default ErrorMsg;","import React from 'react';\r\n\r\ninterface IProps {\r\n    msg: string | null;\r\n}\r\n\r\nconst ErrorMsg = (props: IProps) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n        { props.msg }\r\n    </div>\r\n);\r\n\r\nexport default ErrorMsg;","import React from 'react';\r\nimport { FaStepBackward, FaStepForward } from 'react-icons/fa';\r\n\r\ninterface IProps {\r\n    curr: number,\r\n    length: number,\r\n    uploadPage: Function\r\n}\r\n\r\nfunction generateArr(length: number): number[] {\r\n    const arr: number[] = [];\r\n\r\n    for (let i = 1; i <= length; i++) {\r\n        arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nconst MediaNav = ({length, curr, uploadPage}: IProps) => (\r\n    <div className=\"btn-group btn-group-sm mr-2 pr-1\">\r\n        {curr - 1 >=1 && <button type=\"button\"\r\n                key='back'\r\n                className='btn btn-secondary mr-1'\r\n                onClick={() => uploadPage(--curr)}\r\n        >\r\n            <FaStepBackward />\r\n        </button>\r\n        }\r\n\r\n        {generateArr(length).map((step: number) => (\r\n            <button type=\"button\"\r\n                    key={step}\r\n                    className={`btn ${ step === curr ? 'btn-primary' : 'btn-secondary' }`}\r\n                    onClick={() => step !== curr ? uploadPage(step) : console.log('This page is already opened')}\r\n            >\r\n                { step }\r\n            </button>\r\n        ))}\r\n\r\n        {curr + 1 <= length && <button type=\"button\"\r\n                                key='forward'\r\n                                className='btn btn-secondary ml-1'\r\n                                onClick={() => uploadPage(++curr)}\r\n        >\r\n            <FaStepForward/>\r\n        </button>\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default MediaNav;","import MediaNav from './MediaNav';\r\n\r\nexport default MediaNav;","import MediaItem from './MediaItem';\r\n\r\nexport default MediaItem;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MediaItem.scss';\r\nimport BaseMedia from '../../../../models/BaseMedia';\r\n\r\ninterface IProps {\r\n    item: BaseMedia;\r\n}\r\n\r\nclass MediaItem extends Component<IProps> {\r\n\r\n    render() {\r\n        const {id, image, title, type} = this.props.item;\r\n\r\n        return (\r\n            <Link className=\"card mr-3 my-2 border-0 rounded\"\r\n                  to={`/${type}s/${id}`}\r\n            >\r\n                <div className=\"card__img-wrapper overflow-hidden\">\r\n                    <img src={image}\r\n                         className=\"card__img card-img-top\"\r\n                         alt=\"poster\"\r\n                    />\r\n                </div>\r\n\r\n                {title &&\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title text-dark text-center\">{title}</h6>\r\n                    </div>\r\n                }\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaItem;","import MediaList from './MediaList';\r\n\r\nexport default MediaList;","import React, { Component } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport './MediaList.scss';\r\nimport MediaNav from './MediaNav';\r\nimport MediaItem from './MediaItem';\r\n\r\ninterface IProps {\r\n    items: any[],\r\n    pages?: {\r\n        length: number,\r\n        curr: number\r\n    },\r\n    uploadMediaForStep?: Function\r\n}\r\n\r\nclass MediaList extends Component<IProps> {\r\n\r\n    render() {\r\n        const {items, pages, uploadMediaForStep} = this.props;\r\n\r\n        return (\r\n            <div className='card-wrapper d-flex flex-column justify-content-end'>\r\n\r\n                <TransitionGroup className=\"card-group\">\r\n                    {items.map((item) =>\r\n                        <CSSTransition classNames='scaleFade'\r\n                                       in={true}\r\n                                       appear={true}\r\n                                       timeout={1000}\r\n                                       key={item.id}\r\n                        >\r\n                            <MediaItem item={item}/>\r\n                        </CSSTransition>\r\n                    )}\r\n                </TransitionGroup>\r\n\r\n                {pages && pages.length > 1 && <MediaNav curr={pages.curr}\r\n                                                        length={pages.length}\r\n                                                        uploadPage={(step: number) => uploadMediaForStep && uploadMediaForStep(step)}\r\n                />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaList;","class ApiConfig {\r\n\r\n    static API = `https://${process.env.REACT_APP_HOST}/`;\r\n\r\n    static getPopularTVShowsPath = `${ApiConfig.API}tv-shows/popular`;\r\n    static getWantedMoviesPath = `${ApiConfig.API}movies/wanted`;\r\n\r\n    static getMediaDetailsPath = `${ApiConfig.API}{type}/details/{id}`;\r\n    static getMediaPosterPath = `${ApiConfig.API}{type}/poster/{id}`;\r\n    static getMediaSearchPath = `${ApiConfig.API}{type}/search`;\r\n\r\n};\r\n\r\nexport default ApiConfig;","import Movie from './Movie';\r\nimport TVShow from './TVShow';\r\n\r\nexport enum MediaType {\r\n    Movie = 'movie',\r\n    TVShow = 'tv-show',\r\n    Another = 'another'\r\n}\r\n\r\nclass MediaFactory {\r\n    private readonly _media: Movie | TVShow;\r\n\r\n    constructor(type: MediaType, data: any) {\r\n        this._media = type === MediaType.Movie ? new Movie(data) : new TVShow(data);\r\n    }\r\n\r\n    getMedia(): Movie | TVShow {\r\n        return this._media;\r\n    }\r\n}\r\n\r\nexport default MediaFactory;","import { MediaType } from './MediaFactory';\r\n\r\nexport interface IBaseMedia {\r\n    id: string;\r\n    type?: MediaType;\r\n    image?: string;\r\n    title?: string;\r\n    imdb_id?: string;\r\n}\r\n\r\nclass BaseMedia {\r\n    id: string;\r\n    title: string;\r\n    image: string;\r\n    type: MediaType;\r\n\r\n    constructor(data: IBaseMedia, type: MediaType) {\r\n        this.id = data.imdb_id || data.id;\r\n        this.image = data.image || 'https://cdns.directv.com/cms2/my_directv/general/lg__celebrity_generic.jpg';\r\n        this.title = data.title || '';\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BaseMedia;","import BaseMedia from './BaseMedia';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface IMedia {\r\n}\r\n\r\nclass Media extends BaseMedia{\r\n    rating: number;\r\n    duration: number;\r\n    published: string;\r\n    stars: string[];\r\n    countries: string[];\r\n    keywords: string[];\r\n    genres: string[];\r\n    trailer: string;\r\n    summary: string;\r\n    year: number;\r\n\r\n    constructor(data: any, type: MediaType) {\r\n        super(data, type);\r\n\r\n        this.rating = data.rating;\r\n        this.duration = data.duration;\r\n        this.published = data.published;\r\n        this.stars = data.stars.slice(0, 5);\r\n        this.countries = data.countries;\r\n        this.keywords = data.keywords.slice(0, 10);\r\n        this.genres = data.genres;\r\n        this.trailer = data.trailer;\r\n        this.summary = data.summary;\r\n        this.year = data.year;\r\n    }\r\n}\r\n\r\nexport default Media;","import Media from './Media';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface IMovie {\r\n}\r\n\r\nclass Movie  extends Media {\r\n    director: string;\r\n\r\n    constructor(data: any) {\r\n        super(data, MediaType.Movie);\r\n\r\n        this.director = data.director;\r\n    }\r\n}\r\n\r\nexport default Movie;","import Media from './Media';\r\nimport { MediaType } from './MediaFactory';\r\n\r\ninterface ITVShow {\r\n}\r\n\r\nclass TVShow extends Media {\r\n    creators: string[];\r\n    yearStarted: string;\r\n    yearEnded: string;\r\n    status: string;\r\n\r\n    constructor(data: any) {\r\n        super(data, MediaType.TVShow);\r\n\r\n        this.creators = data.creators;\r\n        this.yearStarted = data.year_started || 'unknown';\r\n        this.yearEnded = data.year_ended || 'not yet';\r\n        this.status = data.status;\r\n    }\r\n}\r\n\r\nexport default TVShow;","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport ApiConfig from '../core/ApiConfig';\r\nimport Movie from '../models/Movie';\r\nimport TVShow from '../models/TVShow';\r\nimport BaseMedia, { IBaseMedia } from '../models/BaseMedia';\r\nimport MediaFactory, { MediaType } from '../models/MediaFactory';\r\nimport IMediaResponse from '../models/MediaResponse';\r\n\r\nexport class MediaService {\r\n    VISIBLE_ITEMS: number = 10;\r\n    storage: { popularShows: IBaseMedia[] } = {\r\n        popularShows: []\r\n    };\r\n\r\n    // TODO: don't like this logic with pagination\r\n    getPopularShows(page: number = 1): Promise<IMediaResponse> {\r\n        const { popularShows } = this.storage;\r\n        const getPosters = (ids: IBaseMedia[]) => this.getPosters(this.extractDataFromStorage(popularShows, ids, page),\r\n                                                                  MediaType.TVShow)\r\n            .then((media: BaseMedia[]) => {\r\n\r\n                return {\r\n                    media,\r\n                    pages: {\r\n                        length: popularShows.length / this.VISIBLE_ITEMS,\r\n                        curr: page\r\n                    }\r\n                };\r\n            });\r\n\r\n        return this.storage.popularShows.length >= this.VISIBLE_ITEMS * page\r\n            ? getPosters([])\r\n            : axios.get(ApiConfig.getPopularTVShowsPath)\r\n                .then((ids: any) => this.convertToArrWithKeyId(ids))\r\n                .then((ids: IBaseMedia[]) => getPosters(ids));\r\n    }\r\n\r\n    getWantedMoviesIds(): Promise<BaseMedia[]> {\r\n\r\n        return axios.get(ApiConfig.getWantedMoviesPath)\r\n            .then((ids: any) => this.convertToArrWithKeyId(ids))\r\n            .then((res: IBaseMedia[]) => this.getPosters(res, MediaType.Movie));\r\n    }\r\n\r\n    getDetail(id: string, location: { pathname: string }): Promise<Movie | TVShow> {\r\n        const type = location.pathname.indexOf('movie') !== -1 ? MediaType.Movie : MediaType.TVShow;\r\n\r\n        return axios.get(this.prepareApiPath(ApiConfig.getMediaDetailsPath, id, type))\r\n            .then(data => {\r\n                return new MediaFactory(type, data).getMedia();\r\n            });\r\n    }\r\n\r\n    search(config: AxiosRequestConfig): Promise<any> {\r\n        const requests = [axios.get(this.prepareApiPath(ApiConfig.getMediaSearchPath, '', MediaType.Movie + 's'), config),\r\n            axios.get(this.prepareApiPath(ApiConfig.getMediaSearchPath, '', MediaType.TVShow + 's'), config)];\r\n\r\n        return axios.all(requests)\r\n            .then(axios.spread((movies: IBaseMedia, tvShows: any) => {\r\n                // Both requests are now complete\r\n                return axios.all([this.getPosters(this.prepareSearchRes(movies), MediaType.Movie),\r\n                    this.getPosters(this.prepareSearchRes(tvShows), MediaType.TVShow)])\r\n                    .then(res => [...res[0], ...res[1]]);\r\n            }));\r\n    }\r\n\r\n    private getPosters(media: IBaseMedia[],\r\n                       type: MediaType): Promise<BaseMedia[]> {\r\n\r\n        return axios.all(media.map(item => this.getPoster(item, type)))\r\n            .then((res: string[]) => {\r\n\r\n                res.forEach((item, index) => {\r\n                    media[index].image = item;\r\n                });\r\n\r\n                return media.map(i => new BaseMedia(i, type));\r\n            });\r\n    }\r\n\r\n    private getPoster(media: IBaseMedia, type: MediaType): Promise<any> {\r\n        return axios.get(this.prepareApiPath(ApiConfig.getMediaPosterPath, media.id, type))\r\n            .catch(() => media.image);\r\n    }\r\n\r\n    private prepareApiPath(path: string, id: string, type: MediaType | string): string {\r\n        return path.replace('{id}', id)\r\n            .replace('{type}', type);\r\n    }\r\n\r\n    private convertToArrWithKeyId(ids: string[]): IBaseMedia[] {\r\n        return ids.map((id: string) => {\r\n            return {id};\r\n        });\r\n    }\r\n\r\n    private prepareSearchRes(media: IBaseMedia | IBaseMedia[]): BaseMedia[] {\r\n        let result: IBaseMedia[] = Array.isArray(media) ? media : [media];\r\n\r\n        return result.map((item: IBaseMedia) => new BaseMedia(item, MediaType.Another));\r\n    }\r\n\r\n    private extractDataFromStorage(mediaFromStorage: IBaseMedia[],\r\n                                   requestedMedia: IBaseMedia[],\r\n                                   page: number = 1): IBaseMedia[] {\r\n\r\n        if (requestedMedia) {\r\n            mediaFromStorage.push(...requestedMedia);\r\n        }\r\n\r\n        return mediaFromStorage.slice((page - 1) * this.VISIBLE_ITEMS, this.VISIBLE_ITEMS * page);\r\n    }\r\n}\r\n\r\nexport default MediaService;","import React, { Component } from 'react';\r\n\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport MediaList from '../shared/MediaList';\r\nimport MediaService from '../../services/mediaService';\r\nimport IMediaResponse from '../../models/MediaResponse';\r\nimport BaseMedia from '../../models/BaseMedia';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n    media: BaseMedia[],\r\n    nav: { curr: number, length: number },\r\n    loaded: boolean,\r\n    loading: boolean,\r\n    error: null | string\r\n}\r\n\r\nclass PopularShows extends Component<IProps, IState> {\r\n    mediaService: MediaService;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            media: [],\r\n            nav: {\r\n                curr: 1,\r\n                length: 0\r\n            },\r\n            error: null,\r\n            loaded: false,\r\n            loading: false\r\n        };\r\n\r\n        this.mediaService = new MediaService();\r\n    }\r\n\r\n    render() {\r\n        const {media, nav, nav: {length}, error} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Title title='Popular shows'\r\n                       length={length * 10}/>\r\n                {this.state.loading && <Loader/>}\r\n\r\n                {this.state.loaded && <MediaList items={media}\r\n                                                 pages={nav}\r\n                                                 uploadMediaForStep={this.getPopularShows}\r\n                />}\r\n                {this.state.error && <ErrorMsg msg={error}/>}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getPopularShows();\r\n    }\r\n\r\n    getPopularShows = (step?: number): void => {\r\n        this.setState({\r\n            loading: true,\r\n            media: []\r\n        });\r\n\r\n        this.mediaService.getPopularShows(step)\r\n            .then((data: IMediaResponse) => {\r\n\r\n                this.setState({\r\n                    media: data.media,\r\n                    nav: data.pages,\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(() => this.setState({\r\n                    loading: false,\r\n                    error: 'Can not get posters of TV shows using ids.'\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\nexport default PopularShows;","import React, { Component } from 'react';\r\n\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport MediaList from '../shared/MediaList';\r\nimport MediaService from '../../services/mediaService';\r\nimport BaseMedia from '../../models/BaseMedia';\r\n\r\ninterface IState {\r\n    movies: BaseMedia[],\r\n    loaded: boolean,\r\n    loading: boolean\r\n    error: string | null,\r\n}\r\n\r\nclass WantedMovies extends Component {\r\n    state: IState = {\r\n        movies: [],\r\n        error: null,\r\n        loaded: false,\r\n        loading: false\r\n    };\r\n    mediaService: MediaService = new MediaService();\r\n\r\n    render() {\r\n        const {loaded, loading, error, movies} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Title title='Wanted movies'\r\n                       length={movies.length}/>\r\n                {loading && (<Loader/>)}\r\n                {loaded && movies && (<MediaList items={movies} />)}\r\n                {error && !loading && (<ErrorMsg msg={error}/>)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n\r\n        this.getWantedMovies();\r\n    }\r\n\r\n    private getWantedMovies(): void {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        this.mediaService.getWantedMoviesIds()\r\n            .then((movies: BaseMedia[]) => {\r\n                this.setState({\r\n                    movies,\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(() => this.setState({\r\n                    loading: false,\r\n                    error: 'Can not get posters of movies using ids.'\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\nexport default WantedMovies;\r\n","import Home from './Home';\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nimport PopularShows from '../PopularShows/PopularShows';\r\nimport WantedMovies from '../WantedMovies/WantedMovies';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PopularShows />\r\n                <WantedMovies />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import Input from './Input';\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Input.scss';\r\n\r\ninterface IProps {\r\n    value: string,\r\n    lostFocus: any,\r\n    searchChanged: any,\r\n    active: boolean,\r\n    placeholder: string\r\n}\r\n\r\nclass Input extends Component<IProps> {\r\n    _inputRef: any;\r\n\r\n    render() {\r\n        const {placeholder, active} = this.props;\r\n\r\n        return (\r\n            <CSSTransition timeout={300}\r\n                           in={active}\r\n                           classNames='grow'\r\n            >\r\n                <div className='input'\r\n                >\r\n                    <input type=\"text\"\r\n                           className='input__el w-100'\r\n                           value={this.props.value}\r\n                           ref={input => this._inputRef = input}\r\n                           placeholder={placeholder}\r\n                           onBlur={this.props.lostFocus}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this._inputRef.focus();\r\n    }\r\n\r\n    handleChange = (e: any) => {\r\n        this.props.searchChanged(e.target.value);\r\n    }\r\n}\r\n\r\nexport default Input;","import SearchForm from './SearchForm';\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { IoIosSearch } from 'react-icons/io';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SearchForm.scss';\r\nimport Input from '../../shared/Input';\r\n\r\nclass SearchForm extends Component {\r\n    state = {\r\n        search: '',\r\n        active: false,\r\n        redirectToReferrer: false\r\n    };\r\n\r\n    render() {\r\n        const {active, redirectToReferrer, search} = this.state;\r\n\r\n        return (\r\n            <form className=\"search-form d-flex align-items-center\"\r\n                  onSubmit={this.navigateToSearchPage}\r\n            >\r\n                <CSSTransition timeout={300}\r\n                               in={!active}\r\n                               classNames='fade'\r\n                >\r\n                    <IoIosSearch\r\n                        className='search-form__icon'\r\n                        onClick={this.openSearchField} />\r\n                </CSSTransition>\r\n\r\n                <Input placeholder='Search... '\r\n                       value={this.state.search}\r\n                       active={this.state.active}\r\n                       lostFocus={this.closeSearchField}\r\n                       searchChanged={this.handleSearchChange}\r\n                />\r\n\r\n                {redirectToReferrer && <Redirect to={{pathname: '../search', search: `?query=${search}`}}/>}\r\n\r\n            </form>\r\n        );\r\n    };\r\n\r\n    componentDidUpdate(): void {\r\n\r\n        if (this.state.redirectToReferrer) {\r\n\r\n            this.setState({\r\n                redirectToReferrer: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openSearchField = () => {\r\n\r\n        this.setState({\r\n            active: true\r\n        });\r\n    };\r\n\r\n    closeSearchField = () => {\r\n\r\n        this.setState({\r\n            search: '',\r\n            active: false\r\n        });\r\n    };\r\n\r\n    navigateToSearchPage = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            redirectToReferrer: true\r\n        });\r\n    };\r\n\r\n    handleSearchChange = (val: string) => {\r\n        this.setState({search: val});\r\n    };\r\n}\r\n\r\nexport default SearchForm;","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.scss';\r\nimport SearchForm from './SearchForm';\r\n\r\nconst Header = () => (\r\n    <header className=\"header bg-dark py-1\">\r\n        <div className=\"container d-flex justify-content-between align-items-center\">\r\n            <Link className=\"header__logo\"\r\n                  to='/home'\r\n            >\r\n                <img className=\"img-fluid\"\r\n                     src=\"https://www.userlogos.org/files/netflix-n-logo-png.png\"\r\n                     alt=\"logo\"\r\n                />\r\n            </Link>\r\n            <SearchForm/>\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import { Footer } from './Footer';\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer bg-dark py-4 position-absolute text-white w-100\">\r\n            <div className=\"container d-flex justify-content-center\">\r\n                {/*<ContactForm/>*/}\r\n                Still need to do:\r\n\r\n                <ul className=\"mb-0\">\r\n                    <li>Authorization</li>\r\n                    <li>Search</li>\r\n                    <li>Episodes</li>\r\n                    <li>Add slider?</li>\r\n                    <li>Lazy images?</li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <GoogleLogin\r\n                clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        );\r\n    }\r\n\r\n    responseGoogle = (res: any) => {\r\n        console.log('Answer', res);\r\n    }\r\n}\r\n\r\nexport default Login;","import MediaDetail from './MediaDetail';\r\n\r\nexport default MediaDetail;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\n\r\nimport Movie from '../../models/Movie';\r\nimport TVShow from '../../models/TVShow';\r\nimport MediaService from '../../services/mediaService';\r\n\r\nimport './MediaDetail.scss';\r\n\r\ninterface IState {\r\n    media: TVShow | Movie | any,\r\n    loaded: boolean,\r\n    loading: boolean,\r\n    error: string | null\r\n}\r\n\r\nclass MediaDetail extends Component<any> {\r\n    state: IState = {\r\n        media: {},\r\n        error: null,\r\n        loaded: false,\r\n        loading: false\r\n    };\r\n\r\n    mediaService = new MediaService();\r\n\r\n    render() {\r\n        const {year, creators, stars, keywords, yearStarted, yearEnded, summary, rating, title, image, genres} = this.state.media;\r\n\r\n        return (\r\n            <>\r\n                {this.state.loading && !this.state.error && <Loader/>}\r\n                {this.state.loaded &&\r\n                <div className=\"row mt-5 mb-5\">\r\n                    <div className=\"col col-4 col--perspective\">\r\n\r\n                        <CSSTransition in={!!image}\r\n                                       timeout={300}\r\n                                       appear={true}\r\n                                       classNames='fadeRotate'\r\n                        >\r\n                            <img className=\"d-block img-thumbnail mb-4\"\r\n                                 src={image}\r\n                                 alt=\"media-poster\"/>\r\n                        </CSSTransition>\r\n\r\n                        {genres.map((genre: string, i: number) =>\r\n                            <span key={i}\r\n                                  className=\"badge badge-secondary mr-2 py-1 px-2 mt-1\">{genre}</span>)}\r\n                    </div>\r\n\r\n                    <section className=\"col col-8\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h1 className=\"mb-0 w-75\">{title}</h1>\r\n                            <span className=\"badge badge-warning\">{rating}</span>\r\n                        </div>\r\n                        <div className=\"mt-1 text-primary\"> {yearStarted ?\r\n                            <span>{yearStarted} - {yearEnded}</span> : year} </div>\r\n\r\n                        <div className=\"mt-5 w-75\">\r\n                            {summary}\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mb-2\">\r\n                            {keywords.map((word: string, i: number) =>\r\n                                <span key={i}\r\n                                      className=\"badge badge-info mr-2 py-1 px-2 mt-1\">{word}</span>)}\r\n                        </div>\r\n\r\n                        <div className=\"row mt-4\">\r\n                            {creators && creators.length > 0 && <div className=\"col col-6\">\r\n                                <h5>Creators</h5>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {creators.map((creator: string, i: number) =>\r\n                                        <li key={i}\r\n                                            className=\"list-group-item\">{creator}</li>)}\r\n                                </ul>\r\n                            </div>}\r\n\r\n                            <div className=\"col col-6\">\r\n                                <h5>Stars</h5>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {stars.map((star: string, i: number) =>\r\n                                        <li key={i}\r\n                                            className=\"list-group-item\">{star}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>}\r\n\r\n                {this.state.error && <ErrorMsg msg={this.state.error}/>}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getDetail();\r\n    }\r\n\r\n    private getDetail(): void {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        this.mediaService.getDetail(this.props.match.params.id, this.props.location)\r\n            .then((data: Movie | TVShow) => {\r\n                this.setState({\r\n                    error: null,\r\n                    loaded: true,\r\n                    loading: false,\r\n                    media: data\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    error: 'Can not get details by id.'\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport default MediaDetail;","import SearchResults from './SearchResults';\r\n\r\nexport default SearchResults;","import React, { Component } from 'react';\r\nimport { UnregisterCallback } from 'history';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport Title from '../shared/Title';\r\nimport Loader from '../shared/Loader';\r\nimport ErrorMsg from '../shared/ErrorMsg';\r\nimport MediaList from '../shared/MediaList';\r\nimport BaseMedia from '../../models/BaseMedia';\r\nimport MediaService from '../../services/mediaService';\r\n\r\ninterface IProps {\r\n    location: any,\r\n    history: any\r\n}\r\n\r\ninterface IStore {\r\n    media: BaseMedia[];\r\n    loading: boolean;\r\n    loaded: boolean;\r\n    error: string | null;\r\n}\r\n\r\nclass SearchResults extends Component<IProps, IStore> {\r\n    stopListenRoute: UnregisterCallback = () => {\r\n    };\r\n    cancelSearchRequest: Function = () => {\r\n    };\r\n    mediaService: MediaService = new MediaService();\r\n    state: IStore = {\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n        media: []\r\n    };\r\n\r\n    render() {\r\n        const {media, loaded, loading, error} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Title title='Search results'\r\n                       length={media.length}\r\n                />\r\n                {loading && !error && <Loader/>}\r\n                {loaded && <MediaList items={media} />}\r\n                {error && <ErrorMsg msg={error}/>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.search();\r\n        this.startListenRouteChanges();\r\n    }\r\n\r\n    // TODO: there is warning about memory leak, BUT request is canceled and route changes aren't listening\r\n    componentWillUnmount(): void {\r\n        this.cancelSearchRequest();\r\n        this.stopListenRoute();\r\n    }\r\n\r\n    private search(newLocation?: any): void {\r\n        const location: any = newLocation || this.props.location;\r\n        const params = new URLSearchParams(location.search);\r\n\r\n        this.setState({\r\n            media: [],\r\n            loading: true\r\n        });\r\n\r\n        const config: AxiosRequestConfig = {\r\n            params,\r\n            cancelToken: new axios.CancelToken((c) => {\r\n                // An executor function receives a cancel function as a parameter\r\n                this.cancelSearchRequest = c;\r\n            })\r\n        };\r\n\r\n        this.mediaService.search(config)\r\n            .then((res: BaseMedia[]) => {\r\n\r\n                    this.setState({\r\n                        media: res,\r\n                        loaded: true,\r\n                        loading: false,\r\n                        error: null\r\n                    })\r\n                }\r\n            )\r\n            .catch(() => this.setState({\r\n                    error: 'There is no game according to the request.',\r\n                    loading: false\r\n                })\r\n            );\r\n    }\r\n\r\n    private startListenRouteChanges(): void {\r\n        this.stopListenRoute = this.props.history.listen((location: any) => this.search(location));\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport './core/HttpInterceptor';\r\n\r\nimport Home from './components/Home';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Login from './components/Login/Login';\r\nimport MediaDetail from './components/MediaDetail';\r\nimport SearchResults from './components/SearchResults';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header/>\r\n\r\n                <div className=\"container py-4\">\r\n\r\n                    <Switch>\r\n                        <Route exact\r\n                               path='/home'\r\n                               component={Home}/>\r\n\r\n                        <Route exact\r\n                               path='/tv-shows/:id'\r\n                               component={MediaDetail}/>\r\n\r\n                        <Route exact\r\n                               path='/movies/:id'\r\n                               component={MediaDetail}/>\r\n\r\n                        <Route path='/search'\r\n                               component={SearchResults}/>\r\n\r\n                        <Route path='/login'\r\n                               component={Login}/>\r\n\r\n                        <Route path='/'\r\n                               render={() => <Redirect to='/home'/> }\r\n                        />\r\n                    </Switch>\r\n\r\n                </div>\r\n\r\n                <Footer/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('ErrorMsg during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}